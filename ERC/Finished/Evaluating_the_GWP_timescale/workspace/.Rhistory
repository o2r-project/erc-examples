library("httr")
library("curl")
library("stringr")
library("jsonlite")
library("rjson")
corpus_path <- "../ERC"
cat("Loading copus papers from", corpus_path, "\n")
bindings <- rjson::fromJSON(file = "bindings.json")
corpus_path <- "../ERC"
cat("Loading copus papers from", corpus_path, "\n")
bindings <- rjson::fromJSON(file = "bindings.json")
o2r_api_endpoint <- "http://localhost/api/v1/"
user_cookie_url <- "http://localhost/oauth/cookie/0000-0001-6225-344X"
#o2r_api_endpoint <- "https://o2r.uni-muenster.de/api/v1/"
#o2r_user_cookie <- URLdecode("s%3AJJr2hI0Q3ffgU9ZcB55yJIRfJTvUEbKh.GJbmCuqLeUrj1D8zGqHlY1ndRDUOj9jA1QDnthgTYz8")
# get cookie via API from o2r-guestlister, but user must login manually
if (!is.null(content(GET(user_cookie_url))$error))
invisible(readline(prompt = "Login as 'User' at http://localhost, then press [enter] to continue"))
if (!is.null(content(GET(user_cookie_url))$error) && !interactive())
stop("Login as 'User' at http://localhost before rendering the document.")
o2r_user_cookie <- curl_unescape(content(GET(user_cookie_url))$cookie)
# clear cookies (can be required for manual testing and when the cookie changes)
httr::handle_reset(o2r_api_endpoint)
finished_papers_path <- file.path(corpus_path, "Finished")
list.files(finished_papers_path)
finished_papers_repro_zips <- list.files(path = finished_papers_path,
#pattern = "Reproduced.*zip",
pattern = "workspace.zip",
recursive = TRUE,
full.names = TRUE)
has_rmd <- sapply(X = finished_papers_repro_zips, FUN = function(zipfile) {
files_in_zip <- unzip(zipfile = zipfile, list = TRUE)
any(grepl(pattern = "main\\.Rmd", x = files_in_zip, ignore.case = TRUE))
})
finished_papers_repro_zips[has_rmd]
green_papers <- finished_papers_repro_zips[has_rmd][10]
green_papers
relativePath = function(p) {
str_replace(p, paste0(path.expand(corpus_path), "/"), "")
}
upload_workspace_zip <- function(file, cookie) {
file_relative <- relativePath(file)
startTime <- Sys.time()
cat(format(startTime), "Uploading ", file_relative, "\n")
# https://o2r.info/o2r-web-api/compendium/upload/#upload-via-api
multipart_file <- upload_file(file)
response <- POST(url = paste0(o2r_api_endpoint, "compendium"),
body = list(compendium = multipart_file,
content_type = "workspace"),
accept_json(),
set_cookies(connect.sid = cookie),
encode = "multipart")
#str(response)
response_content <- content(response)
if (is.list(response_content) && !is.null(response_content$id)) {
cat(format(Sys.time()), "Uploaded  ", file_relative, ": ",
response_content$id,
paste0("(", format(Sys.time() - startTime), ")"), "\n")
result <- response_content$id
} else {
cat(format(Sys.time()), "Error uploading ", file_relative, "\n",
toString(response_content), "\n")
result <- NA
}
names(result) <- file_relative
return(result)
}
finished_papers_uploads <- lapply(X = green_papers,
FUN = upload_workspace_zip,
cookie = o2r_user_cookie)
# publish candidates with direct copy of the metadata
publish_compendium <- function(id, cookie, sleep_after_upload_secs = 0) {
if (is.na(id)) {
warning("Cannot publish compendium from ", names(id), "\n")
return(NA)
}
cat(format(Sys.time()), "Publishing ", id, paste0(" (", relativePath(names(id)) ,")"), "...")
# get metadata
response <- GET(url = paste0(o2r_api_endpoint, "compendium/", id, "/metadata"),
accept_json(),
set_cookies(connect.sid = cookie))
metadata <-  content(response, as = "text")
tmpMeta = fromJSON(metadata)["metadata"]
####BAD HACK: fromJSON toJSON transforms array including "displayFile" to character
if(typeof(tmpMeta$metadata$o2r$displayfile_candidates)=="character"){
tmpMeta$metadata$o2r$displayfile_candidates = c("display.html", "")
}
if(typeof(tmpMeta$metadata$o2r$codefiles)=="character"){
#tmpMeta$metadata$o2r$codefiles = c("main.Rmd")
}
if(typeof(tmpMeta$metadata$o2r$mainfile_candidates)=="character"){
tmpMeta$metadata$o2r$mainfile_candidates = c("main.Rmd", "")
}
for (binding in bindings) {
if(binding["title"]==tmpMeta$metadata$o2r$title){
tmpMeta$metadata$o2r$interaction = binding$bindings
for (i in seq(from=1, to=length(tmpMeta$metadata$o2r$interaction),by=1)){
tmpMeta$metadata$o2r$interaction[[i]]$id=paste0(id)
create_binding <- POST(url = paste0(o2r_api_endpoint, "bindings/binding"),
body = toJSON(tmpMeta$metadata$o2r$interaction[[i]]),
content_type_json(),
accept_json()
)
}
}
}
metadata <- toJSON(tmpMeta)
# avoid parsing and recoding because of unboxing issues
# extract "o2r" element from metadata
metadata <- str_sub(string = metadata,
start = str_locate(string = metadata, pattern = "\\{\"o2r\"")[[1]],
end = str_length(metadata) - 1)
#cat("Sending metadata:\n", metadata, "\n")
# update metadata
response_update <- PUT(url =  paste0(o2r_api_endpoint, "compendium/", id, "/metadata"),
body = metadata,
content_type_json(),
accept_json(),
set_cookies(connect.sid = cookie))
cat(format(Sys.time()), "Published? ", status_code(response_update), "\n")
if (status_code(response_update) != 200) {
cat("Response:", toString(content(response_update)), "\n")
}
result <- status_code(response_update)
names(result) <- id
Sys.sleep(time = sleep_after_upload_secs)
return(result)
}
finished_papers_publishings <- c()
for (candidate_id in finished_papers_uploads) {
result <- publish_compendium(candidate_id, cookie = o2r_user_cookie, sleep_after_upload_secs = 2)
if (!is.na(result))
finished_papers_publishings <- c(finished_papers_publishings, result)
}
rticles::copernicus_journal= '...')
